@page
@{
    Layout = "_AdminLayout";
}
@model LingoVerse.Pages.Manager.Admin_ManageBlogDetailModel
@{
}
<head>
    <link href="https://cdn.jsdelivr.net/npm/quill@2.0.2/dist/quill.snow.css" rel="stylesheet">
    <link rel="stylesheet" href="~/css/manage_blog_detail.css" asp-append-version="true" />
</head>

<!-- Article Form -->
<div class="container-fluid">
    <div class="card">
        <div class="card-body">
            <h5 class="card-title">Thông tin bài viết</h5>
            <form id="articleForm">
                <div class="mb-3">
                    <label for="articleTitle" class="form-label">Tiêu đề</label>
                    <input type="text" class="form-control" id="articleTitle" placeholder="Nhập tiêu đề bài viết">
                </div>
                <div class="mb-3">
                    <label for="articleLanguage" class="form-label">Ngôn ngữ</label>
                    <select class="form-select" id="articleLanguage">
                        <option value="">Chọn ngôn ngữ</option>
                        <option value="english">Tiếng Anh</option>
                        <option value="french">Tiếng Pháp</option>
                        <option value="japanese">Tiếng Nhật</option>
                    </select>
                </div>
                <div class="mb-3">
                    <label for="articleLevel" class="form-label">Cấp độ</label>
                    <select class="form-select" id="articleLevel">
                        <option value="">Chọn cấp độ</option>
                        <option value="beginner">Sơ cấp (A1-A2)</option>
                        <option value="intermediate">Trung cấp (B1-B2)</option>
                        <option value="advanced">Nâng cao (C1-C2)</option>
                    </select>
                </div>
                <div class="mb-3">
                    <label for="articleImage" class="form-label">Hình ảnh</label>
                    <input type="file" class="form-control" id="articleImage" accept="image/*">
                    <img id="imagePreview" alt="Xem trước hình ảnh">
                </div>
                <div class="ai-section">
                    <h5 class="card-title">Tạo nội dung với AI (Gemini)</h5>
                    <textarea id="aiPrompt" placeholder="Nhập yêu cầu cho AI (ví dụ: Viết bài về AI bằng tiếng Anh, cấp độ trung cấp)"></textarea>
                    <button class="btn btn-custom mt-2" id="generateAIContent">Tạo nội dung</button>
                </div>
                <div class="mb-3">
                    <label class="form-label">Nội dung</label>
                    <div id="articleEditor" style="height: 300px;"></div>
                </div>
                <button type="button" class="btn btn-custom" id="saveArticle">Lưu bài viết</button>
            </form>
        </div>
    </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/quill@2.0.2/dist/quill.js"></script>
<script>
    // Khởi tạo Quill Editor
    const quill = new Quill('#articleEditor', {
        theme: 'snow',
        modules: {
            toolbar: [
                [{ 'header': [1, 2, 3, false] }],
                ['bold', 'italic', 'underline'],
                ['link', 'blockquote', 'code-block'],
                [{ 'list': 'ordered' }, { 'list': 'bullet' }]
            ]
        }
    });

    // Xử lý xem trước hình ảnh
    const imageInput = document.getElementById('articleImage');
    const imagePreview = document.getElementById('imagePreview');

    imageInput.addEventListener('change', function () {
        const file = this.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = function (e) {
                imagePreview.src = e.target.result;
                imagePreview.style.display = 'block';
            };
            reader.readAsDataURL(file);
        } else {
            imagePreview.src = '';
            imagePreview.style.display = 'none';
        }
    });

    // Xử lý nút Lưu bài viết
    document.getElementById('saveArticle').addEventListener('click', function () {
        const title = document.getElementById('articleTitle').value;
        const language = document.getElementById('articleLanguage').value;
        const level = document.getElementById('articleLevel').value;
        const image = document.getElementById('articleImage').files[0];
        const content = quill.root.innerHTML;
        console.log({ title, language, level, image, content });
        // Thêm code gửi dữ liệu lên server ở đây
    });

    // Xử lý nút Tạo nội dung với AI
    document.getElementById('generateAIContent').addEventListener('click', async function () {
        const prompt = document.getElementById('aiPrompt').value;
        if (!prompt) {
            alert('Vui lòng nhập yêu cầu cho AI!');
            return;
        }

        // Placeholder cho việc gọi API Gemini
        try {
            const response = await fakeGeminiAPI(prompt);
            quill.root.innerHTML = response;
        } catch (error) {
            console.error('Lỗi khi gọi Gemini API:', error);
            quill.root.innerHTML = '<p>Có lỗi xảy ra khi tạo nội dung.</p>';
        }
    });

    // Hàm giả lập gọi API Gemini (thay bằng API thật của bạn)
    async function fakeGeminiAPI(prompt) {
        return new Promise((resolve) => {
            setTimeout(() => {
                resolve(`<p>Nội dung mẫu từ AI: ${prompt}</p>`);
            }, 1000);
        });
    }
</script>